@page "/expediente/{ExpedienteId:int?}/tramites"
@rendermode InteractiveServer
@inject CasoDeUsoConsultaPorIdExpediente ConsultaPorIDExpediente
@inject CasoDeUsoUsuarioObtener ObtenerUsuario
@inject CasoDeUsoTramiteBaja EliminarTramite
@attribute [StreamRendering]


<PageTitle>Tramites</PageTitle>

<br/>
<p>Esta es la lista de tramites del expediente @(ExpedienteId??0)</p>
<br/>

<table class="tabla-tramites">
    <thead>
    <th>ID</th>
    <th>Contenido</th>
    <th>Fecha de creación</th>
    <th>Fecha de modificación</th>
    <th>Etiqueta</th>
    <th>Editar</th>
    <th>Eliminar?</th>
    </thead>
    <tbody>
    @foreach (var tramite in _tramites)
    {
        <tr>
            <td>@tramite.Id</td>
            <td>@tramite.Contenido</td>
            <td>@tramite.FechaHoraCreacion</td>
            <td>@tramite.FechaHoraMod</td>
            <td>@tramite.EtiquetaTramite</td>
            <td><a href="/expediente/@ExpedienteId/tramite/@tramite.Id">Editar</a></td>
            <td><button class="btn btn-primary" @onclick="()=>Mostrar(tramite.Id)">Eliminar</button></td>
        </tr>
    }
    </tbody>
</table>
<br/>
<a href="/expediente/@ExpedienteId/tramite">Agregar nuevo trámite</a>
<DialogoConfirmacion @ref=_dialogo Mensaje="Esto eliminara el tramite, ¿Estas seguro?" Accion=Eliminar />
<DialogoNotificacion @ref=_dialogoNotificacion Mensaje=@_error Accion=Eliminar />
@code {
    List<Tramite> _tramites = new List<Tramite>();
    Expediente _unExpediente = new Expediente();
    [Parameter] public int? ExpedienteId { get; set; }
    DialogoConfirmacion _dialogo = null!;
    DialogoNotificacion _dialogoNotificacion = null!;
    String? _error = "";
    int _tramiteId = 0;
    protected override void OnParametersSet()
    {
        try
        {
            if (ExpedienteId != null)
            {
                _unExpediente = ConsultaPorIDExpediente.Ejecutar(ExpedienteId.Value);
                _tramites = _unExpediente.Tramites ?? new List<Tramite>();
            }
        }
        catch (Exception e)
        {
            throw new Exception(e.Message);
        }
        
    }
    void Mostrar(int id)
    {
        _tramiteId = id;
        _dialogo.Mostrar();
    }
    void Eliminar()
    {
        try
        {
            if (ExpedienteId != null)
            {
                EliminarTramite.Ejecutar(_tramiteId, ObtenerUsuario.Ejecutar()!, _unExpediente);
                _tramites = ConsultaPorIDExpediente.Ejecutar(ExpedienteId.Value).Tramites ?? new List<Tramite>();
            }

        }
        catch (Exception e)
        {
            _error = e.Message;
            _dialogoNotificacion.Mostrar();
        }
        
    }

}
